{"version":3,"sources":["icons/search.svg","components/Card/index.js","components/CardList/index.js","components/SearchBox/index.js","pages/Home/index.js","pages/Detail/index.js","components/ToogleButton/index.js","components/Header/index.js","App.js","index.js"],"names":["module","exports","Card","character","className","to","id","name","species","src","image","alt","CardList","props","characters","map","key","SearchBox","placeholder","handleChange","searchIcon","type","onChange","Home","useState","setCharacters","searchField","setSearchField","useEffect","fetch","then","res","json","data","results","filteredCharacters","filter","toLowerCase","includes","e","target","value","Detail","characterId","match","params","setCharacter","console","log","status","gender","ToogleButton","handleTheme","htmlFor","Header","App","theme","setTheme","data-theme","checked","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d37813c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.a4a6f430.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles.css\";\n\nexport const Card = ({ character }) => (\n  <div className=\"card-container\">\n    <Link to={`detail/${character.id}`}>\n      <h2>{character.name}</h2>\n      <p>{character.species}</p>\n      <div>\n        <img src={character.image} alt={character.name} />\n      </div>\n    </Link>\n  </div>\n);\n","import React from 'react';\n\nimport { Card } from '../Card';\n\nimport './styles.css';\n\nexport const CardList = props => (\n  <div className='card-list'>\n    {props.characters.map(character => (\n      <Card key={character.id} character={character} />\n    ))}\n  </div>);","import React from 'react';\n\nimport './styles.css';\nimport searchIcon from '../../icons/search.svg';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <div className=\"searchBox__container\">\n    <span className=\"searchBox__icon-container\">\n      <img src={searchIcon} alt=\"\"/>\n    </span>\n    <input\n      className='searchBox__input'\n      type='search'\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  </div>\n);","import React, { useState, useEffect } from \"react\";\n\nimport { CardList } from \"../../components/CardList\";\nimport { SearchBox } from \"../../components/SearchBox\";\n\nimport \"./styles.css\";\n\nexport const Home = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://rickandmortyapi.com/api/character/\")\n      .then((res) => res.json())\n      .then((data) => setCharacters(data.results));\n  }, []);\n\n  const handleChange = (e) => setSearchField(e.target.value);\n\n  const filteredCharacters = characters.filter((character) =>\n    character.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  return (\n    <div className=\"home\">\n      <SearchBox placeholder=\"Search characters\" handleChange={handleChange} />\n      <CardList characters={filteredCharacters}></CardList>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles.css\";\n\nexport const Detail = (props) => {\n  const { characterId } = props.match.params;\n  const [character, setCharacter] = useState({});\n\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/character/${characterId}`)\n      .then((res) => res.json())\n      .then((data) => setCharacter(data));\n  }, [characterId]);\n  console.log(character);\n\n  return (\n    <div className=\"detail\">\n      <Link to=\"/\">&#8592; Go back</Link>\n      <div className=\"detail__info__container\">\n        <div className=\"detail__info\">\n          <div className=\"image-container\">\n            <img src={character.image} alt={character.name} />\n          </div>\n          <div className=\"data\">\n            <h2 className=\"name\">{character.name}</h2>\n            <h3>Status</h3>\n            <p className=\"status\">{character.status}</p>\n            <h3>Specie</h3>\n            <p className=\"species\">{character.species}</p>\n            <h3>Gender</h3>\n            <p className=\"gender\">{character.gender}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './styles.css';\n\nexport const ToogleButton = ({ handleTheme }) => (\n  <div className='toogle-container'>\n    <input\n      type='checkbox'\n      id='switch'\n      name='theme'\n      onChange={handleTheme}\n    />\n    <label className='toogle__label' htmlFor=\"switch\">Change theme</label>\n  </div>\n)","import React from \"react\";\n\nimport { ToogleButton } from \"../ToogleButton\";\n\nimport \"./styles.css\";\n\nexport const Header = (props) => {\n  return (\n    <header className=\"header\">\n      <ToogleButton handleTheme={props.handleTheme} />\n      <h1>\n        Rick <span>and</span> Morty\n      </h1>\n    </header>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Home } from \"./pages/Home\";\nimport { Detail } from \"./pages/Detail\";\nimport { Header } from \"./components/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  const handleTheme = (e) =>\n    e.target.checked ? setTheme(\"dark\") : setTheme(\"light\");\n  return (\n    <Router>\n      <div className=\"app\" data-theme={theme}>\n        <Header handleTheme={handleTheme} />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/detail/:characterId\" component={Detail} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}